{"mappings":"AAAA,MAAMA,EAAMC,SAASC,cAAc,yBAC7BC,EAAOF,SAASC,cAAc,SAGpC,IAAIE,EAAU,KAEdD,EAAKE,iBAAiB,QAASC,GAC/BN,EAAIK,iBAAiB,SAAUC,GAEf,IAAIC,SAAQ,CAACC,EAAKC,KACjCL,EAAUM,aAAY,KACnBJ,GAAe,GACd,KACCH,EAAK,GAAGQ,OACZC,cAAcR,EAAQ,IAItB,SAASE,EAAcO,EAAUC,GAEjCC,QAAQC,IAAI,OACdD,QAAQE,IAAId,EAAK,GAAGQ,M","sources":["src/js/03-promises.js"],"sourcesContent":["const btn = document.querySelector('button[type=\"submit\"]');\nconst form = document.querySelector(\".form\")\n// const amount = document.querySelector('[name=\"amount\"]')\n// console.dir(amount);\nlet timerId = null;\n\nform.addEventListener(\"input\", createPromise)\nbtn.addEventListener(\"submit\", createPromise)\n\nconst promise = new Promise((res, rej) => {\n timerId = setInterval(() => {\n    createPromise()\n  }, 1000);\n  if (form[2].value) {\n  clearInterval(timerId)\n}\n})\n\n  function createPromise(position, delay)\n{\n  console.log(\"qqq\");\nconsole.dir(form[2].value);\n}\n\n// function createPromise(position, delay, ) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$47d4ff9957288465$var$btn","document","querySelector","$47d4ff9957288465$var$form","$47d4ff9957288465$var$timerId","addEventListener","$47d4ff9957288465$var$createPromise","Promise","res","rej","setInterval","value","clearInterval","position","delay","console","log","dir"],"version":3,"file":"03-promises.5e8877c1.js.map"}